resource Smokes()
#Assignment 2.B

#Likt producer / consumer
#Man kan skicka med flera olika kanaler

#Channels
op in1(int)	#tobacco,matches,paper
op in2(int) #Return channel

var m : int := 15

	process Agent
	  var tobacco	: int := 0   	#amount of tobacco on table
	  var paper 	: int := 0  	#amount of paper on table	
	  var matches 	: int := 0   	#amount of matches on table 	
	  var isEmpty 	: bool:= true 	#Table is empty
		
	  do true -> 
	  do(isEmpty = true ) ->
		var x : int := int(random(3)+1)
			
			if(x = 1)->
				tobacco++
				matches++
				send in1(1)
				write("Sent Tobacco and Matches")
			[] (x = 2)->
				tobacco++
				paper++
				send in1(2)
				write("Sent Tobacco and Paper")
			[]	(x = 3)->
				paper++
				matches++
				send in1(3)
				write("Sent Paper and Matches")
			fi
			isEmpty := false
		od
		
		do (isEmpty = false) ->
			#receive in4(isEmpty)
			var a : int 
			receive in2(a)
			if (a = 1) ->
				tobacco := tobacco - 1
				matches := matches - 1
			[] (a = 2) ->
				tobacco := tobacco - 1
				paper := paper - 1
			[] (a = 3) ->
				paper := paper - 1
				matches := matches -1
			fi
			isEmpty := true 
		od

	  od
	end

	process Smoker(i := 1 to m)
	  do true -> 
			var tobacco : int := 0
			var paper 	: int := 0
			var matches : int := 0
			
			var z : int := i % 3
			if( z = 1)->
				tobacco++
			[] (z = 2) ->
				paper++
			[] (z= 0) ->
				matches++
			fi
			
			var x : int
			receive in1(x)
			#if person takes it 
			#Return 1, 2 or 3 , look at x value in agent
			#Not we want 
			
			if(x = 1 and paper >= 1) ->
				tobacco++
				matches++
				
			[] (x = 2 and matches >= 1) ->
				tobacco++
				paper++
			[] (x = 3 and tobacco >= 1) ->
				paper++
				matches++
			[] else ->
				send in1(x)
			fi
			
			if(tobacco = 1 and paper = 1 and matches = 1) ->
				#Blaze it
				tobacco := tobacco - 1
				paper := paper - 1
				matches := matches - 1
				send in2(x)
				write (i , "is smoking")
			fi
	  od
	end
  
 end Smokes